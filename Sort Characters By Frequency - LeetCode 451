Given a string, sort it in decreasing order based on the frequency of characters.

Example 1:

Input:
"tree"

Output:
"eert"

Explanation:
'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.

--------------------------------------------------------------------------------------


class Solution(object):
    def frequencySort(self, s):
        """
        :type s: str
        :rtype: str
        """
        res = ""
        my_dict = {}
        for c in s:
            if c in my_dict:
                my_dict[str(c)] += 1
            else:
                my_dict[str(c)] = 1
        #print my_dict
        
        new_dict = {}
        for char, count in my_dict.items():
            if count not in new_dict:
                new_dict[count] = char
            else:    
                new_dict[count] += char
           
        #print new_dict
            
        for i in range(len(s), 0, -1):
            if i in new_dict:
                for char in new_dict[i]:
                    res += char * i
        
        return res
